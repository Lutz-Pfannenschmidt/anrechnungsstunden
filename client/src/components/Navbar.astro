---
import Breadcumbs from "./Breadcumbs.astro";
---

<nav class="navbar bg-base-100 shadow-sm p-0">
    <div class="navbar-start">
        <a id="home" class="btn btn-ghost text-xl" href="/"
            >Anrechnungsstunden</a
        >
        <button
            class="btn btn-accent btn-outline"
            onclick="about_modal.showModal()">About</button
        >
    </div>

    <div class="navbar-center hidden md:flex">
        <Breadcumbs />
    </div>

    <div class="navbar-end">
        <ul
            id="nav_loggedin"
            class="menu flex-row min-w-max menu-horizontal px-1 hidden gap-4"
        >
            <li>
                <a
                    id="impersonate"
                    class="hidden cursor-pointer btn btn-outline btn-warning"
                    >Wieder als Admin anmelden</a
                >
            </li>
            <li class="hidden md:flex">
                <button class="btn btn-dash">
                    <span id="username"></span>
                    <div id="admin_badge" class="badge badge-error hidden">
                        Admin
                    </div>
                    <div id="short_badge" class="badge badge-primary hidden">
                    </div>
                </button>
            </li>
            <li>
                <a
                    href="/admin/login"
                    class="btn btn-outline btn-error"
                    id="logout">Abmelden</a
                >
            </li>
        </ul>

        <ul id="nav_loggedout" class="menu menu-horizontal px-1 hidden gap-4">
            <li>
                <a
                    href="/admin/login"
                    class="btn btn-outline btn-success"
                    id="logout">Anmelden</a
                >
            </li>
        </ul>
    </div>
</nav>

<script>
    import { logout } from "../pocketbase";
    const logoutButton = document.getElementById("logout") as HTMLAnchorElement;
    logoutButton.addEventListener("click", (e: Event) => {
        e.preventDefault();
        logout();
        window.location.href = "/admin/login";
    });
</script>

<script>
    import { isLoggedIn, isSuperuser, pb, refreshAuth } from "../pocketbase";
    const inList = document.querySelector("#nav_loggedin") as HTMLElement;
    const outList = document.querySelector("#nav_loggedout") as HTMLElement;
    const uname = document.getElementById("username") as HTMLSpanElement;
    const imp = document.getElementById("impersonate") as HTMLAnchorElement;
    const adminBadge = document.getElementById("admin_badge") as HTMLElement;
    const shortBadge = document.getElementById("short_badge") as HTMLElement;

    const home = document.getElementById("home") as HTMLAnchorElement;

    updateNav();
    function updateNav() {
        if (!isLoggedIn()) {
            outList.classList.remove("hidden");
            return;
        }

        inList.classList.remove("hidden");

        const impData = localStorage.getItem("_superuser");
        const impRoute = localStorage.getItem("_superuser_route");

        if (isSuperuser()) {
            localStorage.removeItem("_superuser");
            uname.innerText = pb.authStore.record?.email;
            adminBadge.classList.remove("hidden");
            home.href = "/admin/";
            return;
        } else if (impData && impData != "") {
            imp.classList.remove("hidden");
            imp.addEventListener("click", async () => {
                const data = JSON.parse(impData);
                pb.authStore.clear();
                pb.authStore.save(data.token, data.record);
                localStorage.removeItem("_superuser");
                await refreshAuth();
                window.location.href = impRoute ?? "/admin";
            });
        }

        uname.innerText =
            pb.authStore.record?.name.split("_NAME_COLLISION_")[0];
        shortBadge.innerText = pb.authStore.record?.short;
        shortBadge.classList.remove("hidden");
    }
</script>
