---
import DefaultLayout from "../../../layouts/DefaultLayout.astro";
---

<DefaultLayout title="Benutzerverwaltung">
    <h1 class="text-4xl font-bold text-center">Benutzerverwaltung</h1>

    <hr />
    <h2 class="text-xl font-bold">Lehrpersonen</h2>
    <table id="users" class="table table-sm table-zebra">
        <thead>
            <tr>
                <th>Kürzel</th>
                <th>(Nach-)Name</th>
                <th>E-Mail</th>
                <th>Aktionen</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <div class="flex flex-row gap-4">
        <p>
            <a href="/admin/users/new/csv" class="btn btn-primary">CSV Import</a
            >
        </p>
        <p>
            <a href="/admin/users/new/user" class="btn btn-primary"
                >Neue Lehrperson anlegen</a
            >
        </p>
    </div>

    <hr />
    <h2 class="text-xl font-bold">Admins</h2>
    <table id="admins" class="table table-zebra">
        <thead>
            <tr>
                <th>E-Mail</th>
                <th></th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <p>
        <a href="/admin/users/new/admin" class="btn btn-primary"
            >Neuen Admin anlegen</a
        >
    </p>
</DefaultLayout>

<script>
    import { Collections } from "@src/pocketbase-types";
    import { pb } from "@src/pocketbase";

    const users = await pb.collection(Collections.Users).getFullList();

    const table = document.getElementById("users") as HTMLTableElement;
    const tbody = table.querySelector("tbody") as HTMLTableSectionElement;

    for (const user of users) {
        const tr = document.createElement("tr");
        tr.innerHTML = `
            <td>${user.short.toUpperCase()}</td>
            <td>${user.name}</td>
            <td>${user.email}</td>
        `;

        const actionCell = document.createElement("td");

        const delLink = document.createElement("a");
        delLink.href = "#";
        delLink.textContent = "Löschen";
        delLink.classList.add("btn", "btn-sm", "btn-error");
        delLink.onclick = async () => {
            await pb.collection("users").delete(user.id);
            window.location.reload();
        };
        actionCell.appendChild(delLink);

        tr.appendChild(actionCell);
        tbody.appendChild(tr);
    }

    const adminUsers = await pb.collection("_superusers").getFullList();

    const adminTable = document.getElementById("admins") as HTMLTableElement;
    const adminTbody = adminTable.querySelector(
        "tbody"
    ) as HTMLTableSectionElement;

    for (const user of adminUsers) {
        const tr = document.createElement("tr");

        const email = document.createElement("td");
        email.textContent = user.email;
        tr.appendChild(email);

        if (
            pb.authStore.record?.email === user.email ||
            adminUsers.length <= 1
        ) {
            const td = document.createElement("td");
            td.textContent = "Löschen nicht möglich.";
            tr.appendChild(td);
        } else {
            const del = document.createElement("td");
            const delLink = document.createElement("a");
            delLink.href = "#";
            delLink.textContent = "Löschen";
            delLink.classList.add("btn", "btn-sm", "btn-error");
            delLink.onclick = async () => {
                await pb.collection("_superusers").delete(user.id);
                window.location.reload();
            };
            del.appendChild(delLink);
            tr.appendChild(del);
        }

        adminTbody.appendChild(tr);
    }
</script>
